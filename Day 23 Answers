Day 23 - Answers (Time Complexity Basics)

Question 1: Ek simple for loop likho jo 1 se 10 tak ke numbers print karta hai. Bataye iska time complexity kya hai?
for(int i = 1; i <= 10; i++){
    System.out.println(i);
}
// Time Complexity: O(1) because it runs for a constant number of times (10 times).


Question 2: Ek nested loop likho jisme 1 se 3 tak outer loop chalta hai aur andar 1 se 3 tak hi inner loop. Bataye iska time complexity kya hai?
for(int i = 1; i <= 3; i++){
    for(int j = 1; j <= 3; j++){
        System.out.println(i + "," + j);
    }
}
// Time Complexity: O(1) because both loops run for constant values (3 times each).


Question 3: Ek loop likho jisme i ki value har iteration me i = i * 2 hoti hai (starting from 1). Iska time complexity kya hai?
for(int i = 1; i <= n; i = i * 2){
    System.out.println(i);
}
// Time Complexity: O(log n)

Question 4: Ek array ko linear search karke ek number dhundo. Bataye iska time complexity kya hai?
int[] arr = {1, 2, 3, 4, 5};
int target = 4;
for(int i = 0; i < arr.length; i++){
    if(arr[i] == target){
        System.out.println("Mil gaya: " + arr[i]);
    }
}
// Time Complexity: O(n)

Question 5: Ek sorted array me binary search ka example likho aur iska time complexity kya hai?
int[] arr = {1, 2, 3, 4, 5};
int target = 4;
int low = 0, high = arr.length - 1;
while(low <= high){
    int mid = (low + high) / 2;
    if(arr[mid] == target){
        System.out.println("Mil gaya: " + arr[mid]);
        break;
    } else if(arr[mid] < target){
        low = mid + 1;
    } else{
        high = mid - 1;
    }
}
// Time Complexity: O(log n)

Question 6: Ek nested loop likho jisme outer loop 1 se N tak chalta hai aur inner loop bhi 1 se N tak chalta hai. Bataye iska time complexity kya hai?
for(int i = 1; i <= n; i++){
    for(int j = 1; j <= n; j++){
        System.out.println(i + "," + j);
    }
}
// Time Complexity: O(n^2)

Question 7: Ek 2D array ka sum calculate karo aur bataye iska time complexity kya hai?
int[][] arr = {{1, 2}, {3, 4}};
int sum = 0;
for(int i = 0; i < arr.length; i++){
    for(int j = 0; j < arr[i].length; j++){
        sum += arr[i][j];
    }
}
System.out.println(sum);
// Time Complexity: O(n * m) where n is rows and m is columns.

Question 8: Ek simple array ka maximum element dhundne ka code likho aur bataye iska time complexity kya hai?
int[] arr = {1, 2, 3, 4, 5};
int max = arr[0];
for(int i = 1; i < arr.length; i++){
    if(arr[i] > max){
        max = arr[i];
    }
}
System.out.println(max);
// Time Complexity: O(n)

Question 9: Ek nested loop likho jisme outer loop 1 se N tak chalta hai aur inner loop 1 se 10 tak chalta hai. Bataye iska time complexity kya hai?
for(int i = 1; i <= n; i++){
    for(int j = 1; j <= 10; j++){
        System.out.println(i + "," + j);
    }
}
// Time Complexity: O(n) because 10 is constant.

Question 10: Ek loop likho jisme outer loop 1 se N tak chalta hai aur har iteration me inner loop us outer index (i) tak chalta hai. Bataye iska time complexity kya hai?
for(int i = 1; i <= n; i++){
    for(int j = 1; j <= i; j++){
        System.out.println(i + "," + j);
    }
}
// Time Complexity: O(n^2) because the total number of steps is (n * (n+1))/2 ~ O(n^2).

