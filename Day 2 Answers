1. Print value of i, then do i++ and print again                    
  
public static void main(String[] args) {
    int i = 5;
    System.out.println(i);   // 5 — prints current i
    i++;                     // i becomes 6
    System.out.println(i);   // 6 — prints updated i
}

2. Use ++i and see what prints

public static void main(String[] args) {
    int i = 5;
    System.out.println(++i); // i becomes 6, then prints 6
}

3. Use i++ and see what prints

public static void main(String[] args) {
    int i = 5;
    System.out.println(i++); // prints 5, then i becomes 6
    System.out.println(i);   // prints 6
}

4. Use both ++i and i++ in same program

public static void main(String[] args) {
    int i = 3;
    System.out.println(++i); // i becomes 4, prints 4
    System.out.println(i++); // prints 4, then i becomes 5
    System.out.println(i);   // prints 5
}

5. Pre-decrement vs Post-decrement

public static void main(String[] args) {
    int i = 4;
    System.out.println(--i); // i becomes 3, prints 3
    System.out.println(i--); // prints 3, then i becomes 2
    System.out.println(i);   // prints 2
}

6. Simple calculation with post-increment

dpublic static void main(String[] args) {
    int a = 2;
    int b = a++ + 5;         // b = 2 + 5 = 7, then a becomes 3
    System.out.println(b);   // prints 7
    System.out.println(a);   // prints 3
}

7. Simple calculation with pre-increment

public static void main(String[] args) {
    int a = 2;
    int b = ++a + 5;         // a becomes 3, then b = 3 + 5 = 8
    System.out.println(b);   // prints 8
    System.out.println(a);   // prints 3
}

8. What happens if we do i = i++?

public static void main(String[] args) {
    int i = 10;
    i = i++;                 // i becomes 10 again (value returned is old 10, then i is incremented, but overwritten)
    System.out.println(i);   // prints 10
}

9. Mix of increment and decrement

public static void main(String[] args) {
    int x = 5;
    int y = 10;
    int z = x++ + --y;       // z = 5 + 9 = 14, x becomes 6, y becomes 9
    System.out.println(z);   // prints 14
    System.out.println(x);   // prints 6
    System.out.println(y);   // prints 9
}

10. Try ++ inside print with multiple operations

public static void main(String[] args) {
    int a = 3;
    System.out.println(++a + a++); // ++a = 4, a++ = 4, sum = 8, then a becomes 5
    System.out.println(a);         // prints 5
}

IUC Questions with Answers
IUC 1. Predict output and explain

public static void main(String[] args) {
    int i = 1;
    int j = i++ + i++ + ++i;
    // Step-by-step:
    // i = 1 → j = 1 + 2 + 4 = 7
    // i becomes 4 after operations
    System.out.println(j);   // prints 7
}

IUC 2. Compare values after multiple increments

public static void main(String[] args) {
    int a = 5;
    int b = a++ + ++a;
    // a++ → 5, ++a → 7 → b = 5 + 7 = 12
    // a becomes 7
    System.out.println(a == b); // 7 == 12 → false
}

IUC 3. Final value after many changes

public static void main(String[] args) {
    int i = 0;
    i++;   // 1
    ++i;   // 2
    i--;   // 1
    --i;   // 0
    System.out.println(i); // prints 0
}

IUC 4. Use i++ inside if condition

public static void main(String[] args) {
    int i = 5;
    if (i++ == 5) {          // i++ is 5, then becomes 6
        System.out.println("Yes");
    } else {
        System.out.println("No");
    }
}
// prints Yes

IUC 5. Trace value of variable step-by-step

public static void main(String[] args) {
    int a = 1;
    a = a++ + a++ + ++a;
    // a = 1 + 2 + 4 = 7, final a = 7
    System.out.println(a); // prints 7
}
